# This workflow will build a Java project with Ant
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-ant

name: openjverein nightly release

on:
  push:
    branches: 
      - master
    tags-ignore: 
      - 'v**'
  pull_request:
    types: 
      - closed

jobs:
  build:
    name: Building release and upload to branch

    runs-on: ubuntu-latest

    steps:
    - name: Set up JDK 11 for x64
      uses: actions/setup-java@main
      with:
        java-version: '11'
        distribution: 'temurin'
        architecture: x64

    - name: Check out jameica
      uses: actions/checkout@main
      with:
        repository: willuhn/jameica
        token: ${{ secrets.SERVICE_ACCOUNT_PAT }}
        path: jameica
        
    - name: Build jameica nightly
      working-directory: ./
      run: ant -noinput -buildfile jameica/build/build.xml nightly
    
    - name: Check out hibiscus
      uses: actions/checkout@main
      with:
        repository: willuhn/hibiscus
        token: ${{ secrets.SERVICE_ACCOUNT_PAT }}
        path: hibiscus
        
    - name: Build hibiscus nightly
      working-directory: ./
      run: ant -noinput -buildfile hibiscus/build/build.xml nightly

    - name: Checkout openjverein
      id: openjverein_checkout
      uses: actions/checkout@main
      with:
        path: jverein
    
    - name: Build openjverein plugin
      id: openjverein
      working-directory: ./
      run: |
        ant_output=$(ant -e -q -noinput -buildfile jverein/build/build.xml nightly)
        echo $ant_output

        ssa="SELECTED_VERSION="
        ssb=".zip"
        text="${ant_output#*${ssa}}"
        text="${text%${ssb}*}.zip"
        tmp_version=$(echo $text | sed -rn 's/^([^[:blank:]]*).*$/\1/p')
        tmp_version=$tmp_version

        ssa="SELECTED_FILENAME="
        text="${ant_output#*${ssa}}"
        text="${text%${ssb}*}.zip"
        tmp_filename=$(echo $text | sed -rn 's/^([^[:blank:]]*).*$/\1/p')

        ssa="SELECTED_PATH="
        text="${ant_output#*${ssa}}"
        text="${text%${ssb}*}.zip"
        tmp_path=$(echo $text | sed -rn 's/^([^[:blank:]]*).*$/\1/p')

        echo "selected_version=${tmp_version}" >> $GITHUB_OUTPUT
        echo "selected_filename=$tmp_filename" >> $GITHUB_OUTPUT
        echo "selected_path=$tmp_path" >> $GITHUB_OUTPUT

        builddatetime=$(date +'%Y-%m-%d %H:%M')
        echo "### Version: $tmp_version | filename: $tmp_filename | build datetime: $builddatetime" >> $GITHUB_STEP_SUMMARY

    - name: Delete release
      uses: cb80/delrel@latest
      with:
        tag: v${{ steps.openjverein.outputs.selected_version }}
        token: ${{ secrets.SERVICE_ACCOUNT_PAT }}
    
    - name: Delete tag
      uses: dev-drprasad/delete-tag-and-release@master
      with:
        tag_name: v${{ steps.openjverein.outputs.selected_version }}
        github_token: ${{ secrets.SERVICE_ACCOUNT_PAT }}

    - name: Create release and upload binaries
      uses: ncipollo/release-action@main
      with:
        allowUpdates: true
        artifactErrorsFailBuild: true
        artifacts: ./jverein/${{ steps.openjverein.outputs.selected_path }}
        artifactContentType: "application/zip"
        draft: false
        generateReleaseNotes: true
        name: Release v${{ steps.openjverein.outputs.selected_version }}
        omitDraftDuringUpdate: false
        omitPrereleaseDuringUpdate: false
        prerelease: true
        tag: v${{ steps.openjverein.outputs.selected_version }}
        token: ${{ secrets.SERVICE_ACCOUNT_PAT }}

# This workflow will build a Java project with Ant
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-ant

name: openjverein nightly release

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ closed ]
    branches:
      [ master ]

jobs:
  build:
    name: Building nightly release

    runs-on: ubuntu-22.04

    steps:
    - name: Set up JDK 11 for x64
      uses: actions/setup-java@main
      with:
        java-version: '11'
        distribution: 'temurin'
        architecture: x64

    - name: Check out jameica
      uses: actions/checkout@main
      with:
        repository: willuhn/jameica
        token: ${{ secrets.SERVICE_ACCOUNT_PAT }}
        path: jameica
        
    - name: Build jameica nightly
      working-directory: ./
      run: ant -noinput -buildfile jameica/build/build.xml nightly
    
    - name: Check out hibiscus
      uses: actions/checkout@main
      with:
        repository: willuhn/hibiscus
        token: ${{ secrets.SERVICE_ACCOUNT_PAT }}
        path: hibiscus
        
    - name: Build hibiscus nightly
      working-directory: ./
      run: ant -noinput -buildfile hibiscus/build/build.xml nightly

    - name: Checkout openjverein
      uses: actions/checkout@main
      with:
        path: jverein
    
    - name: Show Working directory
      run: pwd && ls
        
    - name: Build openjverein plugin
      working-directory: ./
      run: ant -noinput -buildfile jverein/build/build.xml nightly

  release:
    name: Create release
    needs: build

    runs-on: ubuntu-latest

    steps:
    - name: Create nightly release
      id: create_release
      uses: actions/create-release@main
      env:
        GITHUB_TOKEN: ${{ secrets.SERVICE_ACCOUNT_PAT }}
      with:
        tag_name: v2.8.20-nightly
        release_name: v2.8.20-nightly
        draft: false
        prerelease: true

    #- name: Upload Release Asset
    #  id: upload-release-asset 
    #  uses: actions/upload-release-asset@main
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.SERVICE_ACCOUNT_PAT }}
    #  with:
    #    upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #    asset_path: ./jverein/releases/nightly/jverein.2.8.20-nightly.zip
    #    asset_name: jverein.2.8.20-nightly.zip
    #    asset_content_type: application/zip

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.SERVICE_ACCOUNT_PAT }}
        file: ./jverein/releases/nightly/jverein.2.8.20-nightly.zip
        asset_name: jverein.2.8.20-nightly.zip
        tag: v2.8.20-nightly
        overwrite: true
